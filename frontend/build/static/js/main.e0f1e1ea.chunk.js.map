{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","constants/productListConstants.js","screens/Homescreen.js","actions/productListActions.js","screens/ProductScreen.js","constants/cartConstants.js","actions/CartActions.js","screens/CartScreen.js","components/formContainer.js","screens/loginScreen.js","screens/registerScreen.js","screens/profileScreen.js","App.js","reportWebVitals.js","store.js","reducers/productsListReducers.js","reducers/cartReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","Header","userLogin","useSelector","state","dispatch","useDispatch","userInfo","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","id","Form","inline","FormControl","type","placeholder","Button","Nav","Link","NavDropdown","title","name","Item","onClick","localStorage","removeItem","Rating","rating","numreviews","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","Loader","Spinner","animation","role","width","height","display","Message","children","Alert","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","Homescreen","productList","products","loading","error","useEffect","a","axios","get","data","payload","response","message","map","sm","md","lg","xl","ProductScreen","history","match","useState","Qty","setQty","productDetails","params","Image","alt","fluid","ListGroup","description","countInStock","value","onChange","e","target","Array","keys","x","disabled","push","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","qty","getState","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","varinat","rounded","reduce","acc","item","toFixed","console","log","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","Control","vlaue","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","field4","setField4","field5","setField5","userDetails","user","firstName","Authorization","token","App","path","component","Loginscreen","Registerscreen","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cartItemsFromStorage","getItem","parse","userInfoFromStorage","reducer","combineReducers","action","reviews","currentItem","itemExists","find","filter","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0f1e1ea.chunk.js","sourcesContent":["import React from 'react'\nimport {Container,Row,Col} from 'react-bootstrap'\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'> Copyright &copy; Aeeh ITIG</Col>\n                </Row>\n            \n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'","import React from 'react'\nimport {Navbar,Nav,Container,Form,FormControl,Button, NavDropdown} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {logout} from '../actions/userActions'\n\nconst Header = () => {\n  const userLogin = useSelector(state=>state.userLogin)\n  const dispatch = useDispatch()\n  const {userInfo} = userLogin\n  const logoutHandler = () =>{\n    dispatch(logout())\n  }\n\n    return (\n        <header>\n          <Navbar bg=\"dark\" variant=\"dark\"expand=\"lg\" collapseOnSelect>\n             <Container>\n               <LinkContainer to=\"/\">\n                <Navbar.Brand >My Press</Navbar.Brand>\n               </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Form inline className=\"ml-auto\">\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button ><i className=\"fa fa-search\"></i></Button>\n                  </Form>\n                  <Nav className=\"ml-auto\">\n                    <LinkContainer to=\"/cart\">\n                      <Nav.Link ><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\n                    </LinkContainer>\n                    {userInfo\n                    ? \n                    <NavDropdown title={userInfo.name} id='user-name'>\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>profile</NavDropdown.Item>\n                      </LinkContainer> \n                      <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                      \n                    </NavDropdown>\n                    :\n                    <LinkContainer to=\"/login\">\n                    <Nav.Link ><i className='fas fa-user'></i>Sign in</Nav.Link>\n                    </LinkContainer> \n                    }\n                    \n                  </Nav>\n                </Navbar.Collapse>\n              </Container>\n          </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n\n","import {USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL} from '../constants/userConstants'\nimport axios from 'axios'\nexport const login = (email,password) => async(dispatch) =>{\n    try {\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type':'application/json'\n            }\n        }\n        //console.log(config)\n        const {data} = await axios.post('/api/users/login',{email,password},config)\n        \n         dispatch({\n            type : USER_LOGIN_SUCCESS,\n            payload:data,\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data)) \n        \n    } catch (error) {\n\n         dispatch({\n            type:USER_LOGIN_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message: error.message\n        }) \n    }\n}\n\nexport const register = (name,email,password) => async(dispatch) =>{\n    try {\n        dispatch({\n            type:USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type':'application/json'\n            }\n        }\n        //console.log(config)\n        const {data} = await axios.post('/api/users/',{name,email,password},config)\n        \n         dispatch({\n            type : USER_REGISTER_SUCCESS,\n            payload:data,\n        })\n        dispatch({\n            type : USER_LOGIN_SUCCESS,\n            payload:data,\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data)) \n        \n    } catch (error) {\n\n         dispatch({\n            type:USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message: error.message\n        }) \n    }\n}\n\nexport const getUserDetails = (id) => async(dispatch,getState) =>{\n    try {\n        dispatch({\n            type:USER_DETAILS_REQUEST\n        })\n     \n        const {userLogin} = getState()\n        const {userInfo} = userLogin\n        const config = {\n            headers: {\n                'Content-Type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n        const {data} = await axios.get(`/api/users/${id}`,config)\n         dispatch({\n            type : USER_DETAILS_SUCCESS,\n            payload:data,\n        })\n       \n        \n    } catch (error) {\n\n         dispatch({\n            type:USER_DETAILS_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message: error.message\n        }) \n    }\n}\n\nexport const logout = () =>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type:USER_LOGOUT\n    })\n}","import React from 'react'\n\nconst Rating = ({rating,numreviews,color}) => {\n    return (\n        <div className=\"rating\">\n           <span>\n               <i style={{color:color}} className={\n                   rating>=1 \n                        ?'fas fa-star' \n                        : rating>=0.5\n                                ?'fas fa-star-half-alt'\n                                :'far fa-star'\n                }>\n               </i>\n           </span>\n           <span>\n               <i style={{color:color}} className={\n                   rating>=2 \n                        ?'fas fa-star' \n                        : rating>=1.5\n                            ?'fas fa-star-half-alt'\n                            :'far fa-star'\n                }>\n               </i>\n           </span>\n           <span>\n               <i style={{color:color}} className={\n                   rating>=3 \n                        ?'fas fa-star' \n                        : rating>=2.5\n                            ?'fas fa-star-half-alt'\n                            :'far fa-star'\n                }>\n               </i>\n           </span>\n           <span>\n               <i style={{color:color}} className={\n                   rating>=4 \n                        ?'fas fa-star' \n                        : rating>=3.5\n                            ?'fas fa-star-half-alt'\n                            :'far fa-star'\n                }>\n               </i>\n           </span>\n           <span>\n               <i style={{color:color}} className={\n                   rating>=5\n                        ?'fas fa-star' \n                        : rating>=4.5\n                            ?'fas fa-star-half-alt'\n                            :'far fa-star'\n                }>\n               </i>\n           </span>\n           <span>{numreviews&&` ${numreviews} reviews`}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n   color:'#f8e825'\n}\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating.js'\nimport {Link} from 'react-router-dom'\nimport Image from 'react-bootstrap/Image'\nconst Product = ({product}) => {\n    return (\n       \n           <Card className=\"p-2 my-3 rounded \" >\n                <Link to={`/product/${product._id}`}>\n                    <Card.Img   className=\"card-img-top\" src={product.image} /> \n                </Link>\n                <Card.Body>\n                    <Link to={`/product/${product._id}`}>\n                        <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\n                    </Link>\n                    <Card.Text as='div' className=\"my-3\">\n                        <Rating rating={product.rating} numreviews={product.numReviews}/>\n                    </Card.Text>\n                    <Card.Text as='h3'>\n                        ${product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card> \n           \n\n            \n        \n    )\n}\n\nexport default Product\n","import React from 'react'\nimport {Spinner} from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status' style={{\n            width:'100px',\n            height : '100px',\n            display: 'block',\n        }}>\n            <span className='sr-only'> Loading...</span>\n        </Spinner>\n        \n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport {Alert} from 'react-bootstrap'\nconst Message = ({variant, children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant:'info',\n}\nexport default Message\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","\nimport React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row,Col} from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n// *--Before Redux=>** import axios from 'axios'\nimport  {listProducts}  from '../actions/productListActions'\n\nconst Homescreen = () => {\n   // *--Before Redux=>** const [products,setProducts] = useState([])\n    /* After integrating with backend folder, products must come from backend not a front end .js\n    hence we use useState hook to set the products array as soon as the page loads.\n    To facilitate this, we need useEffect hook\n    */\n   /*** After using Redux */\n   const dispatch = useDispatch() // function to choose the list of available dispatch methods created in actions. productListActions in this case\n\n   const productList = useSelector(state=>state.productList)\n   /* Here we're declaring a variable with same name used in the store.js; Basically store.js contains the list of possible parts of a state.\n     we're pulling productList part of the global state and asigning it to the same named variable */\n\n   const {products,loading,error} = productList\n\n    /* we can pull the necessary components in state. In this case we're pulling the loading value, possibl;e error and products array */\n\n\n    useEffect(()=>{\n       // *--Before Redux=>**  const fetchProducts = async () =>{\n           // const res = await axios.get('/api/products')// axios queries in the api and sets the result in res variable\n            // /api/product queries in to http://localhost:3000 but we need 5000 port. Hence we add proxy in frontend/package.json file\n           // setProducts(res.data)\n        // *--Before Redux=>**   const res = await axios.get('api/products')\n         // *--Before Redux=>**  setProducts(res.data)\n        // *--Before Redux=>**              }\n        // *--Before Redux=>**    fetchProducts()\n\n        /*After using Redux, we need to modify use Effect to dispatch the action and change the state dynamically here */\n\n        dispatch(listProducts())\n\n        /*\n        Below actions takes place when we dispatch the ListProducts() action\n        1. The action listProducts is called in productListActions.js\n        2. The action then fires the 'PRODUCT_LIST_REQUEST' which calls api/products\n        3. On success, 'PRODUCT_LIST_SUCCESS' is activated in productsActions.js\n        4. This changes the current state to new state. In this case, the current state before api call is\n            empty array of products. upon successful action complete, the products array is going to be filled with the payload(data)\n    */\n    \n   \n    \n    },[dispatch]) //[] dependency array if we need options on useEffect\n\n\n    /* --IMPORTANT-- */\n     /* To implement Loader, we use terinary operator \n     {loading?} means if loading == true;\n     {loading? implement spin animation: (else check if error?display error: in case of no error render the products from the state. Which is products array)}\n\n    /*------------*/\n    return (\n        <>\n         <h1> Latest Releases</h1> \n         {loading?<Loader>Loading....</Loader>:error?<Message>{error}</Message>:\n         <Row>\n         {products.map(product=>(\n             <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n             <Product product={product}/>\n             </Col>\n         ))}\n        </Row>\n\n         }\n            \n            \n        </>\n    )\n}\n\nexport default Homescreen\n","import { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from '../constants/productListConstants'\nimport axios from 'axios'\n\n export const listProducts= ()=> async (dispatch)=>{\n    \n    try {\n        dispatch({type:PRODUCT_LIST_REQUEST})\n        const {data} = await axios.get('/api/products')\n        dispatch({\n        type:PRODUCT_LIST_SUCCESS,\n        payload : data\n    })\n        \n    } catch (error) {\n        dispatch({\n            type:PRODUCT_LIST_FAIL,\n            payload:error.response && error.response.data.message ? error.response.message.data: error.message\n        })\n        \n    }\n\n}\n\n export const listProductDetails= (id)=> async (dispatch)=>{\n    \n    try {\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\n        const {data} = await axios.get(`/api/products/${id}`)\n        dispatch({\n        type:PRODUCT_DETAILS_SUCCESS,\n        payload : data\n    })\n        \n    } catch (error) {\n        dispatch({\n            type:PRODUCT_DETAILS_FAIL,\n            payload:error.response && error.response.data.message ? error.response.message.data: error.message\n        })\n        \n    }\n\n}\n\n","import React,{useState,useEffect}from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Row,Col,Image,ListGroup,Card,Button, Container, FormControl} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport {listProductDetails} from '../actions/productListActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nconst ProductScreen = ({history,match}) => {\nconst [Qty,setQty] = useState(1) //Qty is the variable holding the quantity and setQty is the state where on dropdown select, \n//the value of selected must be displayed in the dropdown text box. This is a component level state.\nconst dispatch = useDispatch()\nconst productDetails = useSelector(state=>state.productDetails)\nconst {product,error,loading} = productDetails\nuseEffect(()=>{\n    dispatch(listProductDetails(match.params.id))\n},[dispatch,match]) //[] dependency array if we need options on useEffect\n\nconst addToCartHandler = () =>{\n    history.push(`/cart/${match.params.id}?qty=${Qty}`)\n\n}\n    return (\n        <>\n          <Link className=\"btn btn-light my-3\" to = \"/\"> Go Back</Link>\n          {loading\n          ?\n            <Loader>Loading..</Loader>\n          :\n            error\n             ?\n               <Message variant='danger'>{error}</Message>\n             :\n                        <Row>\n                        <Col md={6}>\n                            <Image src={product.image} alt={product.name} fluid/>\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h3>{product.name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating rating={product.rating} numreviews={product.numReviews}></Rating>\n                                </ListGroup.Item>\n                                <ListGroup.Item>{product.price}</ListGroup.Item>\n                                <ListGroup.Item>{product.description}</ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3} >\n                            <Card>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Price</Col>\n                                        <Col><strong>{product.price}</strong></Col> \n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col> Status</Col>\n                                        <Col>{product.countInStock>0?'In Stock':'Out of Stock'}</Col> \n                                    </Row>\n                                </ListGroup.Item>\n\n                                { /* When the item is in stock only, display the Qty select component*/\n                                product.countInStock >0 && (\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col> Qty:</Col>\n                                            <Col>\n                                            <FormControl as='select' value={Qty} onChange={(e)=>{setQty(e.target.value)}}>\n                                            {\n                                                /* on Select something must be done. i.e the component level state must be changed.\n                                                To do this, we use FormControl Element of React. it it set to Select. Qty = Qty at any point of time\n                                                which is set by component level state modifier function setQty()\n                                                */\n\n                                                /*\n                                                We're using spread operator here to map through the Items available in stock. it's like implementing\n                                                foreach loop in php to fill the option values of dropdown bar dynamically\n                                                */\n                                                [...Array(product.countInStock).keys()].map(\n                                                    (x) =>(\n                                                        <option key ={x+1} value={x+1}>{x+1}</option>\n                                                    )\n                                                )\n                                            }\n                                            </FormControl>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                )\n                                }\n\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                        <Button className=\"btn-block\" type=\"button\" disabled={product.countInStock===0}\n                                        onClick = {addToCartHandler}\n                                        >\n                                            Add to Cart\n                                        </Button>\n                                        </Col> \n                                    </Row>\n                                </ListGroup.Item>\n                            </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n             }\n          \n        </>\n    )\n}\n\nexport default ProductScreen\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'","import {CART_ADD_ITEM,CART_REMOVE_ITEM} from '../constants/cartConstants'\nimport axios from 'axios'\nexport const addToCart = (id,qty) => async (dispatch,getState) =>{\n    const {data} = await axios.get(`/api/products/${id}`)\n    dispatch({\n        type:CART_ADD_ITEM,\n        payload:{\n            product:data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock : data.countInStock,\n            qty\n\n        }\n    })\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => async (dispatch,getState) =>{\n    dispatch({\n        type:CART_REMOVE_ITEM,\n        payload:id\n    })\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n}\n/* local storage is used to store the data locally. in this case,\nwe're storing the cart items. Since local storage accepts only strings, we're stringyfying the JSON object*/","import React, {useEffect} from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Row,Col,ListGroup,Image,Form,Button,Card,FormControl} from 'react-bootstrap'\nimport Message from '../components/Message'\nimport {addToCart,removeFromCart} from '../actions/CartActions'\n\nconst CartScreen = ({match,location,history}) => {\n   const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]):1\n    /*\n    location.search is used to get the URI after ? from the url. \n    split = [1] will get the value of qty which is after qty= in URI.\n    In some cases, the redirection to cart might not take place from add to cart click but\n    user may want to check his cart by clicking on the cart tab in the navbar.\n\n    In such cases, we don't need location.search but just the numerical 1 just to mention no operation needs to be done\n    so the terinary operator is used above to deal with the above requirement.\n\n    */\n    const dispatch = useDispatch()\n    const cart = useSelector(state =>state.cart)\n    const {cartItems} = cart\n    useEffect(()=>{\n        if(productId){\n            dispatch(addToCart(productId,qty))\n        \n        }\n    },[dispatch,productId,qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n    const proceedTocheckoutHandler = ()=>{\n        console.log(\"Checkout\")\n    }\n    return (\n        <Row>\n            <Col md={8}>\n                <h1> Shopping Cart</h1>\n                \n                {cartItems.length===0?<Message>cart is Empty <Link to=\"/\">Go Back</Link></Message>\n                :<ListGroup varinat='flush'>\n                    {\n                    cartItems.map((Item) =>(\n                      \n                        <ListGroup.Item>\n                            <Row>\n                                <Col md={2}>\n                                    <Image src={Item.image} fluid rounded></Image>\n                                    \n                                </Col>\n                                <Col md={3}>\n                                    <Link to={`/product/${Item.product}`}>{Item.name}</Link>\n                                </Col>\n                                <Col md={2}>{Item.price}</Col>\n                                <Col md={2}>\n                                <FormControl as='select' value={Item.qty} \n                                onChange={\n                                    (e)=>{\n                                        dispatch(addToCart(Item.product,Number(e.target.value)))\n                                    }\n                                }\n                                >\n                                            {\n                                                \n                                                [...Array(Item.countInStock).keys()].map(\n                                                    (x) =>(\n                                                        <option key ={x+1} value={x+1}>{x+1}</option>\n                                                    )\n                                                )\n                                            }\n                                    </FormControl>\n                                </Col>\n                                <Col md={2}>\n                                    <Button type='button' variant='light' onClick={(e) => {\n                                        removeFromCartHandler(Item.product)\n                                    }}>\n                                        <i className=\"fas fa-trash\"></i>\n                                    </Button>\n                                </Col>\n                            </Row>\n                      </ListGroup.Item> \n                    ))\n                    }\n                </ListGroup>\n                }\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            {/*\n                            Reduce function on an array is used to iterate over the elements and accumulate it with some calculated value.\n                            In this case, we need to calculate total items in the cart. so we iterate over the CartItems array, add the item\n                            at every stage to the accumulator acc; it is initialized with 0.\n                            */}\n                            <h5> Sub Total :{cartItems.reduce((acc,item)=>acc+item.qty,0)} items</h5>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            {/*\n                            Same functionality as above. In this case we need to add all items price by multiplying it with the quantity chosen.\n                            The resultant would give the final price of the cart.\n                            */}\n                            <h5> Total Price : $ {cartItems.reduce((acc,item)=>acc+item.price*item.qty,0).toFixed(2)}</h5>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type='button' variant='dark'  onClick={proceedTocheckoutHandler}> Proceed To Checkout</Button>\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport {Container,Row,Col} from 'react-bootstrap'\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n            <Col xs={12} md={6}>{children}</Col>\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React,{useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {login} from '../actions/userActions'\nimport FormContainer from '../components/formContainer'\nconst LoginScreen = ({location,history}) => {\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n    const redirect = location.search? location.search.split(\"=\")[1]:'/'\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin) // sue selector is used to get the part of the state from the state object; the state might contain states of objects from different screens as well.\n    // State is like a central ledger of all values of objects of screens.\n    // from the state, select useLogin part of the state and put it in the variable called userLogin\n\n    const {userInfo,loading,error} = userLogin\n    // from the userLogin varibale obtained from the state, take current values of error, loading and userInfo\n\n    /* useEffect is the function in react which is typically used to redirect or change the content of the page\n     whenever the state of a particular state object changes.\n     In this case, we need to redirect when the userInfo Changes. By default it will be blank and after the \n     successful authentication, the content of the page must change by redirecting it to the products page\n\n     useEffect takes the dependencies as an array. here userInfo is the dependency. i.e if it change use effect must be triggered.\n\n     */\n    useEffect(() =>{\n        if(userInfo){\n            history.push(redirect)\n        }\n    },[history,userInfo,redirect])\n\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        dispatch(login(email,password))\n\n    }\n    return (\n        <FormContainer>\n            <h1>Sign in </h1>\n            {error&& <Message variant='danger'>{error}</Message>}\n            {loading&& <Loader></Loader>}\n            <Form onSubmit = {submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label> Email:</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter your email\" vlaue={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label> Password:</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your pasword\" vlaue={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit'variant=\"primary\">\n                    Sign In\n                </Button>\n            </Form>\n            <Row className=\"py-3\">\n                <Col>\n                New Customer? \n                <Link to={redirect?`/register?redirect=${redirect}`:'/register'}>\n                     Register Here\n                </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React,{useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {login,register} from '../actions/userActions'\nimport FormContainer from '../components/formContainer'\nconst RegisterScreen = ({location,history}) => {\n    const [name,setName] = useState('')\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n    const [confirmPassword,setConfirmPassword] = useState('')\n    const [message,setMessage] = useState(null)\n    const redirect = location.search? location.search.split(\"=\")[1]:'/'\n    const dispatch = useDispatch()\n    const userRegister = useSelector(state => state.userRegister) // sue selector is used to get the part of the state from the state object; the state might contain states of objects from different screens as well.\n    // State is like a central ledger of all values of objects of screens.\n    // from the state, select useLogin part of the state and put it in the variable called userLogin\n\n    const {userInfo,loading,error} = userRegister\n    // from the userLogin varibale obtained from the state, take current values of error, loading and userInfo\n\n    /* useEffect is the function in react which is typically used to redirect or change the content of the page\n     whenever the state of a particular state object changes.\n     In this case, we need to redirect when the userInfo Changes. By default it will be blank and after the \n     successful authentication, the content of the page must change by redirecting it to the products page\n\n     useEffect takes the dependencies as an array. here userInfo is the dependency. i.e if it change use effect must be triggered.\n\n     */\n    useEffect(() =>{\n        if(userInfo){\n            history.push(redirect)\n        }\n    },[history,userInfo,redirect])\n\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        if(password!== confirmPassword)\n          setMessage(\"Passwords Do Not Match\")\n          dispatch(register(name,email,password))\n\n    }\n    return (\n        <FormContainer>\n            <h1>Sign Up </h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error&& <Message variant='danger'>{error}</Message>}\n            {loading&& <Loader></Loader>}\n            <Form onSubmit = {submitHandler}>\n            <Form.Group controlId='name'>\n                    <Form.Label> Name:</Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Enter your name\" vlaue={email} onChange={(e)=>setName(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label> Email:</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter your email\" vlaue={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label> Password:</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your pasword\" vlaue={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Password:</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm your pasword\" vlaue={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit'variant=\"primary\">\n                    Sign Up\n                </Button>\n            </Form>\n            <Row className=\"py-3\">\n                <Col>\n                Already Customer? \n                <Link to={redirect?`/login?redirect=${redirect}`:'/login'}>\n                     Login Here\n                </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React,{useState,useEffect} from 'react'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {getUserDetails} from '../actions/userActions'\nconst ProfileScreen = ({history}) => {\n    const [name,setName] = useState('')\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n    const [confirmPassword,setConfirmPassword] = useState('')\n    const [field4,setField4] = useState('')\n    const [field5,setField5] = useState('')\n    const [message,setMessage] = useState(null)\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails) \n    const {user,loading,error} = userDetails\n    const userLogin = useSelector(state => state.userLogin) \n    const {userInfo} = userLogin\n    useEffect(() =>{\n        if(!userInfo){\n            history.push('/login')\n        }\n        else{\n            \n           if(!user.email){\n               dispatch(getUserDetails('profile'))\n           }\n           else{\n            \n               setName(user.firstName)\n               setEmail(user.email)     \n           }\n        }\n    },[dispatch,history,user,userInfo])\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        if(password!== confirmPassword)\n          setMessage(\"Passwords Do Not Match\")\n        else{\n            //dispatch action\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n            <h2>User Profile </h2>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error&& <Message variant='danger'>{error}</Message>}\n            {loading&& <Loader></Loader>}\n            <Form onSubmit = {submitHandler}>\n            <Form.Group controlId='name'>\n                    <Form.Label> Name:</Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Enter your name\" value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label> Email:</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter your email\" value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label> Password:</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your pasword\" value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Password:</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm your pasword\" value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Field1:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Confirm your f1\" value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Field2:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Confirm your f1\" value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Field3:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Confirm your f1\" value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Field4:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Confirm your f1\" value={field4} onChange={(e)=>setField4(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='Confirmpassword'>\n                    <Form.Label> Field5:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Confirm your f1\" value={field5} onChange={(e)=>setField5(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit'variant=\"primary\">\n                    Update\n                </Button>\n            </Form>\n\n            </Col>\n            \n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import Footer from './components/Footer'\nimport Header from './components/Header'\nimport {Container} from 'react-bootstrap'\nimport Homescreen from './screens/Homescreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport Loginscreen from './screens/loginScreen'\nimport Registerscreen from './screens/registerScreen'\nimport ProfileScreen from './screens/profileScreen'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nconst App = () => {\n  return (\n    <Router>\n    <Header></Header>\n    <main className='py-5'>\n      <Container>\n        \n        <Route path='/login' component={Loginscreen}/> \n        <Route path='/register' component={Registerscreen}/> \n        <Route path='/profile' component={ProfileScreen}/> \n        <Route path='/product/:id' component={ProductScreen}/>\n        <Route path='/cart/:id?' component={CartScreen}/>\n        <Route path='/' component={Homescreen} exact/>\n      </Container>\n    </main>\n    <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport  {composeWithDevTools} from 'redux-devtools-extension'\nimport  {productDetailsReducer, productListReducer} from './reducers/productsListReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {userLoginReducer,userRegisterReducer,userDetailsReducer} from './reducers/userReducers'\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\nconst userInfoFromStorage = localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\nconst reducer = combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer,\n    userLogin : userLoginReducer,\n    userRegister : userRegisterReducer,\n    userDetails:userDetailsReducer,\n\n})\nconst initialState = {\n    cart : {\n        cartItems:cartItemsFromStorage,\n    },\n    userLogin: {\n        userInfo:userInfoFromStorage,\n    } \n}\nconst middleWare = [thunk]\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleWare))\n\n)\n\nexport default store","import {PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_REQUEST, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL} from '../constants/productListConstants'\nconst productListReducer = (state = {products:[]},action) =>{\n\n    switch(action.type){\n        case PRODUCT_LIST_REQUEST:\n            return({loading:true,products:[]})\n        case PRODUCT_LIST_SUCCESS:\n            return({loading:false,products:action.payload})\n        case PRODUCT_LIST_FAIL:\n            return({loading:false, error:action.payload})\n            default:\n                return state\n\n    }\n\n}\n\nconst productDetailsReducer = (state = {product:{reviews:[]}},action) =>{\n\n    switch(action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return({loading:true,...state})\n        case PRODUCT_DETAILS_SUCCESS:\n            return({loading:false,product:action.payload})\n        case PRODUCT_DETAILS_FAIL:\n            return({loading:false, error:action.payload})\n            default:\n                return state\n\n    }\n\n}\n\nexport {productListReducer,productDetailsReducer}\n","import {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants'\nexport const cartReducer = (state = {cartItems:[]},action)=>{\n    switch (action.type){\n        case CART_ADD_ITEM:\n            const currentItem = action.payload\n            const itemExists = state.cartItems.find(x=>x.product === currentItem.product)\n            if(itemExists){\n                return{\n                    /*if Item exists in cart already, keep cart as it is*/\n                    ...state,\n                    cartItems: state.cartItems.map(x=>\n                        x.product ===itemExists.product ? currentItem : x\n                    \n                        )\n                }\n\n            }\n            else{\n                return{\n                    /* if item is not already there in the cart, add currentItem to the cart */\n                    ...state,\n                    cartItems: [...state.cartItems,currentItem]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return({\n                ...state,\n                cartItems: state.cartItems.filter( (x) => x.product!== action.payload)\n            }\n            )\n        default:\n            return(state)\n    }\n}","import {USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL} from '../constants/userConstants'\nconst userLoginReducer = (state = {},action) =>{\n\n    switch(action.type){\n        case USER_LOGIN_REQUEST:\n            return({loading:true})\n        case USER_LOGIN_SUCCESS:\n            return({loading:false,userInfo:action.payload})\n        case USER_LOGIN_FAIL:\n            return({loading:false, error:action.payload})\n        case USER_LOGOUT:\n            return({})\n            default:\n                return state\n\n    }\n\n}\n\nconst userRegisterReducer = (state = {},action) =>{\n\n    switch(action.type){\n        case USER_REGISTER_REQUEST:\n            return({loading:true})\n        case USER_REGISTER_SUCCESS:\n            return({loading:false,userInfo:action.payload})\n        case USER_REGISTER_FAIL:\n            return({loading:false, error:action.payload})\n        default:\n                return state\n\n    }\n\n}\n\nconst userDetailsReducer = (state = {user:{}},action) =>{\n\n    switch(action.type){\n        case USER_DETAILS_REQUEST:\n            return({...state,loading:true})\n        case USER_DETAILS_SUCCESS:\n            return({loading:false,user:action.payload})\n        case USER_DETAILS_FAIL:\n            return({loading:false, error:action.payload})\n        default:\n                return state\n\n    }\n\n}\n\nexport {userLoginReducer,userRegisterReducer,userDetailsReducer}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}